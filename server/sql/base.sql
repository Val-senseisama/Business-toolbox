CREATE TABLE
    IF NOT EXISTS roles (
        id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
        name VARCHAR(50) NOT NULL,
        json JSON,
        status ENUM ('ACTIVE', 'BLOCKED') DEFAULT 'ACTIVE',
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
    );

CREATE TABLE
    IF NOT EXISTS companies (
        id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
        name VARCHAR(100) NOT NULL,
        about TEXT NOT NULL,
        address TEXT NOT NULL,
        city VARCHAR(50) NOT NULL,
        state VARCHAR(50) NOT NULL,
        country VARCHAR(50) NOT NULL,
        zip_code VARCHAR(20) DEFAULT NULL,
        phone VARCHAR(20) NOT NULL,
        email VARCHAR(100) NOT NULL,
        website VARCHAR(100) DEFAULT NULL,
        industry VARCHAR(50) DEFAULT NULL,
        logo VARCHAR(100) DEFAULT NULL,
        settings JSON DEFAULT NULL,
        plan VARCHAR(100) DEFAULT 'FREE',
        plan_expiry DATETIME DEFAULT (DATE_ADD (CURRENT_TIMESTAMP, INTERVAL 1 MONTH)),
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
    );

CREATE TABLE
    IF NOT EXISTS branches (
        id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
        name VARCHAR(100) NOT NULL,
        settings JSON DEFAULT NULL,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
    );

CREATE TABLE
    IF NOT EXISTS users (
        id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
        email VARCHAR(100) UNIQUE NOT NULL,
        password VARCHAR(100) NOT NULL,
        refresh_secret VARCHAR(100) DEFAULT NULL,
        title VARCHAR(50) DEFAULT NULL,
        firstname VARCHAR(50) DEFAULT NULL,
        lastname VARCHAR(50) DEFAULT NULL,
        phone VARCHAR(20) DEFAULT NULL,
        gender ENUM ('Male', 'Female') DEFAULT NULL,
        status ENUM ('ACTIVE', 'PENDING', 'BANNED') DEFAULT 'PENDING',
        date_of_birth DATE DEFAULT NULL,
        day_of_birth INT (3) DEFAULT 0,
        settings JSON DEFAULT NULL,
        data JSON DEFAULT NULL,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
    );

CREATE TABLE
    IF NOT EXISTS user_company (
        id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
        user_id INT UNSIGNED NOT NULL,
        company_id INT UNSIGNED NOT NULL,
        role_id INT UNSIGNED DEFAULT 0,
        email VARCHAR(100) NOT NULL,
        role_type ENUM ('OWNER', 'STAFF', 'CUSTOMER'),
        limit_to_customers JSON DEFAULT NULL,
        limit_to_branches JSON DEFAULT NULL,
        status ENUM ('ACTIVE', 'PENDING', 'REJECTED') DEFAULT 'PENDING',
        FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE RESTRICT,
        FOREIGN KEY (company_id) REFERENCES companies (id) ON DELETE CASCADE,
        FOREIGN KEY (role_id) REFERENCES roles (id) ON DELETE RESTRICT
    );

CREATE TABLE
    IF NOT EXISTS audit_trail (
        id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
        user_id INT UNSIGNED NOT NULL,
        company_id INT UNSIGNED NOT NULL,
        branch_id INT UNSIGNED NOT NULL,
        email VARCHAR(100) NOT NULL,
        ip_address VARCHAR(45) DEFAULT NULL,
        browser_agents TEXT DEFAULT NULL,
        task VARCHAR(100) NOT NULL,
        details TEXT NOT NULL,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE RESTRICT,
        FOREIGN KEY (branch_id) REFERENCES branches (id) ON DELETE RESTRICT,
        FOREIGN KEY (company_id) REFERENCES companies (id) ON DELETE CASCADE
    );

CREATE TABLE
    IF NOT EXISTS email_messages (
        id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
        company_id INT UNSIGNED DEFAULT 0,
        destination VARCHAR(255) NOT NULL,
        subject VARCHAR(255) NOT NULL,
        body TEXT NOT NULL,
        status ENUM ('SENT', 'PENDING', 'FAILED') DEFAULT 'PENDING',
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
        FOREIGN KEY (company_id) REFERENCES companies (id) ON DELETE CASCADE
    );

CREATE TABLE
    IF NOT EXISTS tokens (
        id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
        email VARCHAR(100) NOT NULL,
        token VARCHAR(255) UNIQUE NOT NULL,
        status ENUM ('USED', 'PENDING') DEFAULT 'PENDING',
        expires_at DATETIME NOT NULL,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
    );

CREATE TABLE
    IF NOT EXISTS logs (
        id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
        task VARCHAR(100) NOT NULL,
        message TEXT NOT NULL,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    );